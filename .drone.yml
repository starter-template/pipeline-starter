---
# test pipeline runs unit and integration tests
kind: pipeline
name: test

workspace:
  base: /go
  path: app

trigger:
  event: [ push, tag, pull_request ]

steps:
  - name: dep
    image: mcom/gobuilder:1.12
    commands: [ "make dep" ]

  - name: lint
    image: golangci/golangci-lint:v1.16.0
    commands: [ "make lint" ]

  - name: test
    image: mcom/gobuilder:1.12
    commands: [ "make test" ]

---
# build pipeline creates application binary, docker image and helm chart and uploads them to artifactory
kind: pipeline
name: build

workspace:
  base: /go
  path: app

depends_on:
  - test

trigger:
  status: [ success ]
  event: [ push, tag, pull_request ]

steps:
  - name: dep
    image: mcom/gobuilder:1.12
    commands: [ "make dep" ]

  - name: build app
    image: mcom/gobuilder:1.12
    commands: [ "make build" ]
    environment:
      BUILD_ARGS: -a -installsuffix cgo
      BUILD_COMMIT: ${DRONE_COMMIT_SHA:0:7}
      BUILD_LDFLAGS: -extldflags "-static"
      BUILD_OUT: <APPLICATION_NAME>-linux-amd64
      BUILD_TAG: ${DRONE_TAG}
      GOARCH: amd64
      GOOS: linux

  - name: build image
    image: plugins/docker:latest
    settings:
      username: { from_secret: docker_username }
      password: { from_secret: docker_password }
      repo: <GITHUB_OWNER>/<APPLICATION_NAME>
      tags: [ "${DRONE_TAG=0.0.0}-${DRONE_COMMIT_SHA:0:7}" ]
